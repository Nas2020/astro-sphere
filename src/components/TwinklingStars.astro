---
// Modified TwinklingStars.astro with performance optimizations
---

<div class="twinkling-stars">
  <!-- Base stars that show on all devices -->
  <div class="star star-1"></div>
  <div class="star star-2"></div>
  <div class="star star-3"></div>
  <div class="star star-4"></div>
  <div class="star star-5"></div>
  
  <!-- Medium and high performance stars -->
  <div class="star star-6 medium-performance-only high-performance-only"></div>
  <div class="star star-7 medium-performance-only high-performance-only"></div>
  <div class="star star-8 medium-performance-only high-performance-only"></div>
  
  <!-- High performance stars only -->
  <div class="star star-9 high-performance-only"></div>
  <div class="star star-10 high-performance-only"></div>
  <div class="star star-11 high-performance-only"></div>
  <div class="star star-12 high-performance-only"></div>
</div>

<style>
  .twinkling-stars {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  /* Hide twinkling stars on devices with reduced animations */
  html.reduce-animations .twinkling-stars {
    display: none;
  }

  /* Performance tier-based visibility */
  @media (prefers-reduced-motion: reduce) {
    .high-performance-only, .medium-performance-only {
      display: none !important;
    }
  }

  html[data-performance-tier="medium"] .high-performance-only {
    display: none;
  }

  html[data-performance-tier="low"] .high-performance-only,
  html[data-performance-tier="low"] .medium-performance-only {
    display: none;
  }

  .star {
    position: absolute;
    background-color: rgba(255, 255, 255, 0.8);
    border-radius: 50%;
    animation: twinkle 2s ease-in-out infinite;
    transform-origin: center center;
  }

  .star::before, .star::after {
    content: '';
    display: block;
    position: absolute;
    background-color: rgba(255, 255, 255, 0.8);
    border-radius: 50%;
  }

  .star::before {
    width: 100%;
    height: 20%;
    top: 40%;
    left: 0;
  }

  .star::after {
    height: 100%;
    width: 20%;
    left: 40%;
    top: 0;
  }

  /* Star positions and sizes */
  .star-1 {
    width: 4px;
    height: 4px;
    top: 15%;
    left: 20%;
    animation-delay: 0s;
  }

  .star-2 {
    width: 5px;
    height: 5px;
    top: 25%;
    left: 60%;
    animation-delay: 0.3s;
  }

  .star-3 {
    width: 3px;
    height: 3px;
    top: 60%;
    left: 40%;
    animation-delay: 0.6s;
  }

  .star-4 {
    width: 4px;
    height: 4px;
    top: 35%;
    left: 80%;
    animation-delay: 0.9s;
  }

  .star-5 {
    width: 5px;
    height: 5px;
    top: 75%;
    left: 25%;
    animation-delay: 1.2s;
  }

  .star-6 {
    width: 3px;
    height: 3px;
    top: 45%;
    left: 30%;
    animation-delay: 1.5s;
  }

  .star-7 {
    width: 4px;
    height: 4px;
    top: 55%;
    left: 65%;
    animation-delay: 1.8s;
  }

  .star-8 {
    width: 3px;
    height: 3px;
    top: 85%;
    left: 75%;
    animation-delay: 0.4s;
  }

  .star-9 {
    width: 4px;
    height: 4px;
    top: 10%;
    left: 45%;
    animation-delay: 0.7s;
  }

  .star-10 {
    width: 3px;
    height: 3px;
    top: 30%;
    left: 10%;
    animation-delay: 1.0s;
  }

  .star-11 {
    width: 5px;
    height: 5px;
    top: 70%;
    left: 90%;
    animation-delay: 1.3s;
  }

  .star-12 {
    width: 4px;
    height: 4px;
    top: 50%;
    left: 15%;
    animation-delay: 1.6s;
  }

  /* Adjust animation for reduced motion */
  @media (prefers-reduced-motion: reduce) {
    .star {
      animation-duration: 4s; /* Slower animation */
    }
  }

  @keyframes twinkle {
    0% {
      opacity: 0;
      transform: rotate(0deg) scale(0.5);
    }
    50% {
      opacity: 1;
      transform: rotate(180deg) scale(1);
    }
    100% {
      opacity: 0;
      transform: rotate(360deg) scale(0.5);
    }
  }
</style>

<script>
  // Conditionally enhance/reduce twinkling effects based on performance settings
  document.addEventListener('DOMContentLoaded', adjustTwinklingEffects);
  document.addEventListener('astro:after-swap', adjustTwinklingEffects);

  function adjustTwinklingEffects() {
    // Wait for performance settings to be available
    if (!window.performanceSettings) return;

    const stars = document.querySelectorAll('.star');
    if (!stars.length) return;

    // Apply device-specific optimizations
    if (window.performanceSettings.hasReducedMotion || 
        window.performanceSettings.deviceTier === 'low' ||
        window.performanceSettings.isLowPowerMode) {
      
      // For reduced motion or low-end devices, show fewer stars with simpler animations
      stars.forEach((star, index) => {
        if (index > 4) { // Only show 5 stars
          star.style.display = 'none';
        } else {
          // Simplify the animation by removing pseudo-elements
          star.style.setProperty('--before-opacity', '0');
          star.style.setProperty('--after-opacity', '0');
          // Make the animation less intensive
          star.style.animationDuration = '3s';
        }
      });
    } else if (window.performanceSettings.deviceTier === 'medium') {
      // For medium devices, show a moderate number of stars
      stars.forEach((star, index) => {
        if (index > 8) { // Show 9 stars for medium devices
          star.style.display = 'none';
        }
      });
    }
  }
</script>